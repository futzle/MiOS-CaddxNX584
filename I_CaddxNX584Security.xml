<?xml version="1.0"?>
<!--
GE Caddx Network NX-584/NX-8E Alarm Plugin
Copyright (C) 2009-2011 Deborah Pickett

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
<implementation>
	<settings>
		<protocol>raw</protocol>
	</settings>
	<functions>
local plugin

function caddxInitialize(lul_device)
	-- Put the /etc/cmh-ludl and /etc/cmh-lu directories into the Lua include path.
	if (package.path:find("/etc/cmh-ludl/?.lua;/etc/cmh-lu/?.lua", 1, true) == nil) then
		package.path = package.path .. ";/etc/cmh-ludl/?.lua;/etc/cmh-lu/?.lua"
	end
	-- Load the Lua implementation.
	package.loaded.L_CaddxNX584Security = nil
	plugin = require("L_CaddxNX584Security")
	-- For when jobs are complete, get the results.
	-- Tunnel through from the plugin package to the top level.
	callbackHandler = plugin.callbackHandler
	-- Call initialization code.
	return plugin.caddxInitialize(lul_device)
end
	</functions>

	<incoming>
		<lua>
			plugin.handleReadByteResult(nil, lul_device, plugin.readByte(lul_data));
		</lua>
	</incoming>

	<startup>caddxInitialize</startup>

	<actionList>
		<action>
			<serviceId>urn:futzle-com:serviceId:CaddxNX584Security1</serviceId>
			<name>ZoneScan</name>
			<job>
				return plugin.jobZoneScan(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:futzle-com:serviceId:CaddxNX584Security1</serviceId>
			<name>ZoneNameScan</name>
			<job>
				return plugin.jobZoneNameScan(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:futzle-com:serviceId:CaddxNX584Security1</serviceId>
			<name>UserScan</name>
			<job>
				return plugin.jobUserScan(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:futzle-com:serviceId:CaddxNX584Security1</serviceId>
			<name>LogEventScan</name>
			<job>
				return plugin.jobLogEventScan(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:futzle-com:serviceId:CaddxNX584Security1</serviceId>
			<name>UserSetPIN</name>
			<job>
				return plugin.jobUserSetPIN(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
			<name>SetArmed</name>
			<job>
				return plugin.jobSetArmed(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:micasaverde-com:serviceId:AlarmPartition1</serviceId>
			<name>RequestQuickArmMode</name>
			<job>
				return plugin.jobRequestQuickArmMode(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:micasaverde-com:serviceId:AlarmPartition1</serviceId>
			<name>RequestArmMode</name>
			<job>
				return plugin.jobRequestArmMode(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
		<action>
			<serviceId>urn:micasaverde-com:serviceId:AlarmPartition1</serviceId>
			<name>RequestPanicMode</name>
			<job>
				return plugin.jobRequestPanicMode(lul_device, lul_settings, lul_job)
			</job>
			<incoming>
				return plugin.handleReadByteResult(lul_job, lul_device, plugin.readByte(lul_data));
			</incoming>
		</action>
	</actionList>
</implementation>
